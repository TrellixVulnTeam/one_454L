{"version":3,"sources":["static/js/particles.js"],"names":["ROWS","COLS","container","particle","canvas","mouse","stats","list","ctx","tog","man","dx","dy","mx","my","d","t","f","a","b","i","n","w","h","p","s","r","c","NUM_PARTICLES","THICKNESS","Math","pow","SPACING","MARGIN","COLOR","DRAG","EASE","init","document","querySelector","createElement","setAttribute","body","getElementById","$","hasClass","getContext","width","height","style","Object","create","x","ox","y","oy","floor","addEventListener","e","bounds","getBoundingClientRect","clientX","left","clientY","top","Stats","appendChild","domElement","step","begin","Date","cos","sin","tan","atan2","vx","vy","createImageData","data","putImageData","end","requestAnimationFrame","resetCanvas","oldCanvas","removeChild"],"mappings":"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","file":"particles.e504eb73.js","sourceRoot":"..","sourcesContent":["var ROWS;\nvar COLS;\n\nvar NUM_PARTICLES = (ROWS = 150) * (COLS = 300),\n  THICKNESS = Math.pow(45, 2),\n  SPACING = 3,\n  MARGIN = 100,\n  COLOR = 0,\n  DRAG = 0.95,\n  EASE = 0.25,\n  /*\n\n  used for sine approximation, but Math.sin in Chrome is still fast enough :)http://jsperf.com/math-sin-vs-sine-approximation\n\n  B = 4 / Math.PI,\n  C = -4 / Math.pow( Math.PI, 2 ),\n  P = 0.225,\n\n  */\n\n  container,\n  particle,\n  canvas,\n  mouse,\n  stats,\n  list,\n  ctx,\n  tog,\n  man,\n  dx,\n  dy,\n  mx,\n  my,\n  d,\n  t,\n  f,\n  a,\n  b,\n  i,\n  n,\n  w,\n  h,\n  p,\n  s,\n  r,\n  c;\n\nparticle = {\n  vx: 0,\n  vy: 0,\n  x: 0,\n  y: 0,\n};\n\nexport function init() {\n  container = document.querySelector(\"#particles-container\");\n  canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"id\", \"particles-canvas\");\n\n  let body = document.getElementById(\"body\");\n  if ($(body).hasClass(\"dark\")) {\n    COLOR = 255;\n  } else {\n    COLOR = 0;\n  }\n\n  ctx = canvas.getContext(\"2d\");\n  man = false;\n  tog = true;\n\n  list = [];\n\n  w = canvas.width = COLS * SPACING;\n  h = canvas.height = ROWS * SPACING;\n\n  container.style.width = \"100%\";\n\n  for (i = 0; i < NUM_PARTICLES; i++) {\n    p = Object.create(particle);\n    p.x = p.ox = MARGIN + SPACING * (i % COLS);\n    p.y = p.oy = MARGIN + SPACING * Math.floor(i / COLS);\n\n    list[i] = p;\n  }\n\n  container.addEventListener(\"mousemove\", function (e) {\n    var bounds = container.getBoundingClientRect();\n    mx = e.clientX - bounds.left;\n    my = e.clientY - bounds.top;\n    man = true;\n  });\n\n  if (typeof Stats === \"function\") {\n    document.body.appendChild((stats = new Stats()).domElement);\n  }\n\n  container.appendChild(canvas);\n}\n\nexport function step() {\n  if (stats) stats.begin();\n\n  if ((tog = !tog)) {\n    if (!man) {\n      t = +new Date() * 0.001;\n      mx = w * 0.5 + Math.cos(t * 2.1) * Math.cos(t * 0.9) * w * 0.45;\n      my = h * 0.5 + Math.sin(t * 3.2) * Math.tan(Math.sin(t * 0.8)) * h * 0.45;\n    }\n\n    for (i = 0; i < NUM_PARTICLES; i++) {\n      p = list[i];\n\n      d = (dx = mx - p.x) * dx + (dy = my - p.y) * dy;\n      f = -THICKNESS / d;\n\n      if (d < THICKNESS) {\n        t = Math.atan2(dy, dx);\n        p.vx += f * Math.cos(t);\n        p.vy += f * Math.sin(t);\n      }\n\n      p.x += (p.vx *= DRAG) + (p.ox - p.x) * EASE;\n      p.y += (p.vy *= DRAG) + (p.oy - p.y) * EASE;\n    }\n  } else {\n    b = (a = ctx.createImageData(w, h)).data;\n\n    for (i = 0; i < NUM_PARTICLES; i++) {\n      p = list[i];\n      (b[(n = (~~p.x + ~~p.y * w) * 4)] = b[n + 1] = b[n + 2] = COLOR),\n        (b[n + 3] = 255);\n    }\n\n    ctx.putImageData(a, 0, 0);\n  }\n\n  if (stats) stats.end();\n\n  requestAnimationFrame(step);\n}\n\nexport function resetCanvas() {\n  var oldCanvas = document.getElementById(\"particles-canvas\");\n  container.removeChild(oldCanvas);\n\n  init();\n  step();\n}\n"]}