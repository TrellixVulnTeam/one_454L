{"version":3,"sources":["static/js/maps.js"],"names":["marker","response","json","userLoc","distance","mk1","mk2","miles","roundedMiles","newMapText","url","city","window","map","myLoc","lat","lng","apiKey","computeDistance","latitude","longitude","google","maps","LatLng","geometry","spherical","computeDistanceBetween","Math","round","materialiseMap","options","center","zoom","disableDefaultUI","styles","lightTheme","Map","document","getElementById","Marker","draggable","animation","Animation","DROP","position","elementType","stylers","color","visibility","featureType","darkTheme","ipLocation","$","ajax","data","JSON","stringify","considerIp","type","contentType","success","location","distanceElement","querySelector","html","alert"],"mappings":";AACA,IAAIA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAZJC,OAAOC,IAaP,IAAMC,EAAQ,CACZC,IAAK,WACLC,KAAM,WAEFC,EAAS,0CAoUf,SAASC,EAAgBC,EAAUC,GAkB1BZ,OAjBPL,EAAU,CACRY,IAAKI,EACLH,IAAKI,GAGPf,EAAM,IAAIgB,OAAOC,KAAKC,OAAOpB,GAC7BG,EAAM,IAAIe,OAAOC,KAAKC,OAAOT,GAE7BV,EAAWiB,OAAOC,KAAKE,SAASC,UAAUC,uBAAuBrB,EAAKC,GAMtEC,EAHa,cAGIH,EACjBI,EAAemB,KAAKC,MAAc,IAARrB,GAAe,IAK3C,SAASsB,EAAe1B,GAClB2B,IAAAA,EAAU,CACZC,OAAQ5B,EACR6B,KAAM,EACNC,kBAAkB,EAClBC,OAAQC,YAGVvB,OAAOC,IAAM,IAAIQ,OAAOC,KAAKc,IAAIC,SAASC,eAAe,OAAQR,GAEjE9B,EAAS,IAAIqB,OAAOC,KAAKiB,OAAO,CAC9B1B,IAAKA,IACL2B,WAAW,EACXC,UAAWpB,OAAOC,KAAKoB,UAAUC,KACjCC,SAAUzC,IAGZH,EAAS,IAAIqB,OAAOC,KAAKiB,OAAO,CAC9B1B,IAAKA,IACL2B,WAAW,EACXC,UAAWpB,OAAOC,KAAKoB,UAAUC,KACjCC,SAAU9B,IA5WdF,OAAOuB,WAAa,CAClB,CACEU,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,UAIb,CACEF,YAAa,cACbC,QAAS,CACP,CACEE,WAAY,SAIlB,CACEH,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEF,YAAa,qBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,6BACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,MACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,MACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,WACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,WACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,OACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,gBACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,aACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,kBACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,QACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,QACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,cAMfnC,OAAOsC,UAAY,CACjB,CACEL,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEF,YAAa,cACbC,QAAS,CACP,CACEE,WAAY,SAIlB,CACEH,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEF,YAAa,qBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,6BACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,MACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,MACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,WACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,WACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,OACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,gBACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,aACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,eACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,kBACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,QACbJ,YAAa,WACbC,QAAS,CACP,CACEC,MAAO,aAIb,CACEE,YAAa,QACbJ,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,cAoDfnC,OAAOuC,WAAa,WAClBC,EAAEC,KAAK,CACL3C,IAAK,2DAA6DO,EAClEqC,KAAMC,KAAKC,UAAU,CAAEC,WAAY,SACnCC,KAAM,OACNC,YAAa,mBACbC,QAAS,SAAUN,GACbA,GAAAA,EAAKO,SAAU,CAEjBhC,EADA1B,EAAU,IAAIkB,OAAOC,KAAKC,OAAO+B,EAAKO,SAAS9C,IAAKuC,EAAKO,SAAS7C,MAGlEE,EAAgBoC,EAAKO,SAAS9C,IAAKuC,EAAKO,SAAS7C,KAC7C8C,IAAAA,EAAkBzB,SAAS0B,cAAc,oBAC7CX,EAAEU,GAAiBE,KACjB,SAAWxD,EAAe,+BAG5ByD,MAAM","file":"maps.e011f16e.js","sourceRoot":"..","sourcesContent":["window.map;\nlet marker;\nlet response;\nlet json;\nlet userLoc;\nlet distance;\nlet mk1;\nlet mk2;\nlet miles;\nlet roundedMiles;\nlet newMapText;\nlet url;\nlet city;\nconst myLoc = {\n  lat: 50.3887502,\n  lng: -4.1281376,\n};\nconst apiKey = \"AIzaSyDNN0p5CJzhe0skik4v41UYCcTgmoiTFIk\";\n\nwindow.lightTheme = [\n  {\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#fff\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#616161\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#f5f5f5\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#bdbdbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#eeeeee\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#757575\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e5e5e5\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#f5f5f5\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#f5f5f5\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#757575\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e5e5e5\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#eeeeee\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#f5f5f5\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#e9e9e9\",\n      },\n    ],\n  },\n];\n\nwindow.darkTheme = [\n  {\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#9a9a9a\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#616161\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#f5f5f5\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#9a9a9a\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#9a9a9a\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#9a9a9a\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e5e5e5\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#9a9a9a\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e5e5e5\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#6ddcbd\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#9e9e9e\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#e5e5e5\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#eeeeee\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#090909\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#9e9e9e\",\n      },\n    ],\n  },\n];\n\nfunction computeDistance(latitude, longitude) {\n  userLoc = {\n    lat: latitude,\n    lng: longitude,\n  };\n\n  mk1 = new google.maps.LatLng(userLoc);\n  mk2 = new google.maps.LatLng(myLoc);\n\n  distance = google.maps.geometry.spherical.computeDistanceBetween(mk1, mk2);\n\n  function getMiles(i) {\n    return i * 0.000621371192;\n  }\n\n  miles = getMiles(distance);\n  roundedMiles = Math.round(miles * 100) / 100;\n\n  return roundedMiles;\n}\n\nfunction materialiseMap(userLoc) {\n  let options = {\n    center: userLoc,\n    zoom: 5,\n    disableDefaultUI: true,\n    styles: lightTheme,\n  };\n\n  window.map = new google.maps.Map(document.getElementById(\"map\"), options);\n\n  marker = new google.maps.Marker({\n    map: map,\n    draggable: false,\n    animation: google.maps.Animation.DROP,\n    position: userLoc,\n  });\n\n  marker = new google.maps.Marker({\n    map: map,\n    draggable: false,\n    animation: google.maps.Animation.DROP,\n    position: myLoc,\n  });\n}\n\nwindow.ipLocation = function () {\n  $.ajax({\n    url: \"https://www.googleapis.com/geolocation/v1/geolocate?key=\" + apiKey,\n    data: JSON.stringify({ considerIp: \"true\" }),\n    type: \"POST\",\n    contentType: \"application/json\",\n    success: function (data) {\n      if (data.location) {\n        userLoc = new google.maps.LatLng(data.location.lat, data.location.lng);\n        materialiseMap(userLoc);\n\n        computeDistance(data.location.lat, data.location.lng);\n        let distanceElement = document.querySelector(\"#distanceElement\");\n        $(distanceElement).html(\n          \"We're \" + roundedMiles + \" miles from each other\"\n        );\n      } else {\n        alert(\"not found\");\n      }\n    },\n  });\n};\n"]}